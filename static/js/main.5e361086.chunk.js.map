{"version":3,"sources":["assets/logo2.svg","assets/profile2.jpg","assets/game.png","assets/portfolioS.jpg","components/Tooltips.js","components/ContactList.js","components/Main.js","pages/MainPage.js","components/Header.js","pages/Bio.js","components/Navigation.js","components/Footer.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tooltips","data","this","props","length","networks","map","index","label","description","id","Fragment","key","_","uniqueId","Card","Header","Accordion","Toggle","as","Button","variant","eventKey","Collapse","Body","defaultActiveKey","Component","socialNetworks","ContactList","useState","show","setShow","handleClose","size","style","margin","onClick","Modal","onHide","closeButton","Title","Footer","Main","getSkills","item","Badge","Container","Row","className","Col","Img","src","profile","Text","href","lg","xs","height","tourism","portfolio","width","action","marginTop","ListGroup","Item","disabled","skills","MainPage","Jumbotron","fluid","Bio","text","border","Navigation","Navbar","collapseOnSelect","expand","bg","Brand","logo","alt","aria-controls","Nav","Link","md","order","activeKey","Content","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5e361086.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.5b7cb12a.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile2.cb95ba0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game.8ceae62e.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolioS.9f93805a.jpg\";","import React, { Component, useState, useRef } from 'react';\r\nimport { Card, Button, Accordion } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\n\r\n\r\nclass Tooltips extends Component {\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    // this.state = {id: _.uniqueId()};\r\n\r\n    if (data.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const networks = data.map(({ label, description, id }, index) => (\r\n      <React.Fragment key={_.uniqueId()}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"dark\" eventKey={id}>\r\n              {label}\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey={id}>\r\n            <Card.Body>{description}</Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </React.Fragment>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          {networks}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const socialNetworks = [  \r\n  { label: 'GitHub', description: 'https://github.com/possesion', id: '2' },\r\n  { label: 'Gmail', description: 'kazantsevgennadiy@gmail.com', id: '3' },\r\n  { label: 'Facebook', description: 'https://www.facebook.com/Kazantsevhp', id: '4' },\r\n  { label: 'Telegram',  description: '@possesion', id: '5' }\r\n];\r\n\r\nexport default Tooltips;\r\n","import React, { Component, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { Container, Modal, Button, ListGroup, Card } from 'react-bootstrap';\r\nimport Tooltips, { socialNetworks } from './Tooltips.js';\r\n\r\nfunction ContactList() {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" size='sm' style={{margin:'3px'}} onClick={handleShow}>\r\n                Контакты\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Мои контакты</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Tooltips data={socialNetworks}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" size='sm' onClick={handleClose}>\r\n                        Close\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport profile from '../assets/profile2.jpg';\r\nimport portfolio from '../assets/game.png';\r\nimport tourism from '../assets/portfolioS.jpg';\r\nimport ContactList from './ContactList.js';\r\nimport _ from 'lodash';\r\nimport { Card, Container, Badge, Button, Col, Row, ListGroup } from 'react-bootstrap';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    const getSkills = data.map((item) => (\r\n      <React.Fragment key={_.uniqueId()}>\r\n        <Badge variant=\"success\">{item}</Badge>{' '}\r\n      </React.Fragment>\r\n    ));\r\n\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={profile} />\r\n              <Card.Body>\r\n                <Card.Title>Казанцев Геннадий</Card.Title>\r\n                <Card.Text>\r\n                  Junior frontend разработчик. Увлекаюсь: <br />• Каллиграфией <br /> • Астрономией <br /> • Грокаю алгоритмы <hr />Реализовал несколько учебных проектов. Эксперементирую над интересными задачами в Codepen.\r\n                </Card.Text>\r\n                <ContactList />\r\n                <Button variant=\"primary\" size='sm' href='https://drive.google.com/file/d/1ikkIR3v_RrHTWTvFt1Yi3VoreyWJpcc0/view?usp=sharing'>скачать резюме</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={6} xs={12}>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src=\"https://asciinema.org/a/G1z1wfYaV4qpjtHwB9KLhsudY.svg\" />\r\n              <Card.Body>\r\n                <Card.Title>Проект: Игры разума</Card.Title>\r\n                <Card.Text>\r\n                  Набор мини игр, запускающихся из командной строки. Реализованно на чистом JS.\r\n                </Card.Text>\r\n                <Button variant=\"primary\" size='sm' href='https://github.com/possesion/frontend-project-lvl1'>Узнать больше</Button>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" style={{ height: '300px' }} src={tourism} />\r\n              <Card.Body>\r\n                <Card.Title>Верстка- Сайт туроператора</Card.Title>\r\n                <Card.Text>\r\n                  Набор мини игр, запускающихся из командной строки. Реализованно на чистом JS.\r\n                </Card.Text>\r\n                <Button variant=\"primary\" size='sm' href='https://possesion.github.io/websiteAnimate/'>Посмотреть</Button>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={portfolio} style={{ width: '50%', margin: 'auto' }} />\r\n              <Card.Body>\r\n                <Card.Title>Пятнашки на чистом JS</Card.Title>\r\n                <Card.Text>\r\n                  Передвиньте блоки так, чтобы сформировался натуральный ряд чисел от 1 до 20.\r\n                </Card.Text>\r\n                <Button variant=\"primary\" size='sm' action href='https://codepen.io/possesion/pen/eYpzeWW'>Играть</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <h3>Скиллы</h3>\r\n            {getSkills}\r\n            <div style={{marginTop: '20px'}}>\r\n              <ListGroup defaultActiveKey=\"#link1\">\r\n                <ListGroup.Item action href=\"#link2\" disabled>\r\n                  <strong>Примеры кода</strong>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action href=\"https://codepen.io/possesion/pen/PoZQqyr\">\r\n                  Бинарная сортировка\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action href='https://codepen.io/possesion/pen/QWyaWGq'>\r\n                  Пример формы на React\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action href='https://codepen.io/possesion/pen/abvxLBQ?editors=1112'>\r\n                  Проверка на коллизию\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action href='https://codepen.io/possesion/pen/KKdxxrL?editors=1112'>\r\n                  Фильтр почтовых адресов\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst skills = ['HTML', 'CSS', 'JS', 'React Native', 'React Native', 'Git', 'Linux', 'Bash', 'CD/CI', 'модульное тестирование', 'Jest', 'Bootstrap', 'npm' ];\r\nexport { skills };\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Main from '../components/Main.js';\r\nimport { skills } from '../components/Main.js';\r\n\r\n\r\nclass MainPage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Main data={skills} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from 'react';\r\nimport { Container, Jumbotron } from 'react-bootstrap';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Jumbotron fluid className='jumbo'>\r\n                <Container>\r\n                    <h2>Welcome to my page!</h2>\r\n                </Container>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport { Card, Container } from 'react-bootstrap';\r\n\r\n\r\nclass Bio extends Component {\r\n    render() {\r\n        const { text } = this.props;\r\n        return (\r\n            <Container style={{height: '100vh'}}>\r\n                <Card border=\"dark\" >\r\n                    <Card.Header>Обо мне</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Опыт</Card.Title>\r\n                        <Card.Text>\r\n                        Программирую около года. До этого работал в продажах, но наступил момент, когда я\r\nрешил, что пора двигаться дальше и поставил цель – стать разработчиком. Из\r\nпрофессиональных качеств могу выделить – умение налаживать отношения с людьми, оптимизация рабочих процессов и нахождение наиболее быстрых\r\nи эффективных решений, работа в сжатых временных рамках и быстрая обучаемость. Путь\r\nразработки начался с Youtube и решения задач по JS на freecodecamp.org. После этого прошел\r\nкурс по JS на Udemy и реализовал функционал одностраничного сайта:\r\n- Слайдер\r\n- Таймер\r\n- Расчет стоимости путевки <br />\r\n\r\nПосле рекомендации знакомых начал обучение на Hexlet.io и разобрался с такими\r\nтемами, как:\r\n- Командная строка\r\n- Система контроля версий (Git)\r\n- Непрерывная интеграция\r\n- Автоматическое тестирование и фреймворк jest.\r\n- DOM API\r\n- Деревья\r\n- Функции, объекты, массивы\r\n- React\r\nПроекты:\r\nCli-утилита которая дает на выбор несколько игр\r\nCli- приложение, которое сравнивает два плоских объекта (в процессе разработки). <br/>\r\n\r\nСайт, на котором вы находитесь сделан на React + React router + Bootstrap.\r\n\r\nЕсть опыт разработки интернет магазин на базе\r\nCMS Joomla и VirtueMart.\r\n\r\nЧасто практикуюсь в песочнице и тестирую новые знания в\r\nCodePen. \r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Bio;\r\n\r\n//  Программирую около года. До этого работал в продажах, но наступил момент, когда я\r\n// решил, что пора двигаться дальше и поставил цель – стать разработчиком. Из\r\n// профессиональных качеств могу выделить – умение налаживать отношения с людьми, оптимизация рабочих процессов и нахождение наиболее быстрых\r\n// и эффективных решений, работа в сжатых временных рамках и быстрая обучаемость. Путь\r\n// разработки начался с Youtube и решения задач по JS на freecodecamp.org. После этого прошел\r\n// курс по JS на Udemy и реализовал функционал одностраничного сайта:\r\n// - Слайдер\r\n// - Таймер\r\n// - Расчет стоимости путевки <br />\r\n\r\n// После рекомендации знакомых начал обучение на Hexlet.io и разобрался с такими\r\n// темами, как\\:\r\n// - Командная строка\r\n// - Система контроля версий (Git)\r\n// - Непрерывная интеграция\r\n// - Автоматическое тестирование и фреймворк jest.\r\n// - DOM API\r\n// - Деревья\r\n// - Функции, объекты, массивы\r\n// - React\r\n// Проекты\\:\r\n// Cli-утилита которая дает на выбор несколько игр\r\n// Cli- приложение, которое сравнивает два плоских объекта (в процессе разработки). <br/>\r\n\r\n// Сайт, на котором вы находитесь сделан на React + React router + Bootstrap.\r\n\r\n// Есть опыт разработки интернет магазин на базе\r\n// CMS Joomla и VirtueMart.\r\n\r\n// Часто практикуюсь в песочнице и тестирую новые знания в\r\n// CodePen.\r\n","import React, { Component } from 'react';\r\nimport logo from '../assets/logo2.svg';\r\nimport { Nav, Navbar, Container, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ContactList from './ContactList.js';\r\nimport MainPage from '../pages/MainPage.js';\r\nimport Header from '../components/Header.js';\r\nimport Home, { skills } from './Main.js';\r\nimport Bio from '../pages/Bio.js';\r\n\r\nconst paragraph = 'Ищу работу во front end разработке. До этого работал в продажах, но в определенный момент';\r\nclass Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar collapseOnSelect expand='md' bg='dark' variant='dark' className='justify-content-center'>\r\n                    <Container >\r\n                        <Navbar.Brand href='/pos-web-app/'>\r\n                            <img\r\n                                src={logo}\r\n                                height='20%'\r\n                                width='20%'\r\n                                className='d-inline-block align-top'\r\n                                alt='Search'\r\n                            />\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n                        <Navbar.Collapse id='responsive-navbar-nav'>\r\n                            <Nav className='ml-auto'>\r\n                                <Nav.Link href='/pos-web-app/'>Главная</Nav.Link>\r\n                                <Nav.Link href='#/bio'>БИО</Nav.Link>                                \r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                <Header />              \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport { Row, Container, Col, Nav, Navbar } from 'react-bootstrap';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Container className=\"justify-content-center\">\r\n            <Row>\r\n              <Col md={{ order: 1 }}>\r\n                <Navbar.Brand href=\"/\">\r\n                  <img\r\n                    alt=\"\"\r\n                    src=\"/logo.svg\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                  />{' '}\r\n      created with React Bootstrap\r\n    </Navbar.Brand>\r\n              </Col>\r\n              <Col md={{ order: 1 }}>\r\n                <Nav className=\"justify-content-end\" activeKey=\"/home\">\r\n                  <Nav.Item>\r\n                    <Nav.Link href=\"/pos-web-app/\">Главная</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" href=\"#/bio\">БИО</Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Navbar>\r\n      </>\r\n    )\r\n  };\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MainPage from '../pages/MainPage.js';\r\nimport Bio from '../pages/Bio.js';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nclass Content extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                <Route exact path='/' component={MainPage} />\r\n                <Route path='/bio' component={Bio} />\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;\r\n\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport './App.css';\nimport Navigation from './components/Navigation.js';\nimport MainPage from './pages/MainPage.js';\nimport Bio from './pages/Bio.js';\nimport Footer from './components/Footer.js';\nimport { skills } from './components/Main';\nimport Content from './components/Content';\n\nfunction App() {\n  return (\n    <>\n      <Navigation /> \n      <Router>\n      <Switch>\n        <Content />\n      </Switch>\n      </Router>        \n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}